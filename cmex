#!/usr/bin/env python3

# to .bashrc file the following line needs to be added:
# export PATH=$PATH":$HOME/.../cmex"

# cmex config file place: ~/.config/cmex/config.txt

import sys
import os
import termcolor

example_items = []
max_num_of_print = 5
search_terms = []
source_files = []

point_substring = 50
point_word = 100
point_max_length = 0

class Example:

   path = "-"
   description = "-"
   src_example = "-"
   point = 0

   def update_point_for_a_search_word(self, search_word):
      desc_pos = self.description.find(search_word)
      ex_pos = self.src_example.find(search_word)

      if (-1 < desc_pos) or (-1 < ex_pos):
         self.point = self.point + point_substring

         desc_words = self.description.split()
         ex_words = self.src_example.split()

         if (search_word in desc_words) or (search_word in ex_words):
            self.point = self.point + point_word

   def compute_full_point(self):
      global search_terms

      for search_word in search_terms:
         self.update_point_for_a_search_word(search_word)

      if ((0 != self.point) and (len(self.src_example) < point_max_length)):
         point_max_length - len(self.src_example)

   def __repr__(self):
      return "[" + self.description + ", " + self.src_example + ", " + str(self.point) + "]"

def load_config(config_path : str):
   f = open(config_path, "r")
   for line in f:
      if line.startswith("source_path: "):
         source_files.append(line[14:-2])

def load_examples(source_path):
   f = open(source_path, "r")

   actual_example_index = -1
   for line in f:
      if line.startswith("*"):
         ex = Example()
         ex.description = line[2:-1]
         example_items.append(ex)
         actual_example_index = len(example_items)-1

      if line.startswith("`"):
         if -1 == actual_example_index:
            raise Exception("source file format error at line " + line) 

         if example_items[actual_example_index].src_example == "-":
               example_items[actual_example_index].src_example = line[1:-2]
         else:
            example_items[actual_example_index].src_example += '\n' + line[1:-2]
      elif "" == line:
         actual_example_index = -1

def sort_examples():

   for ex in example_items:
      ex.compute_full_point()

   example_items.sort(reverse = True, key=lambda example: example.point)

def print_results():
   for i in range(0, min(max_num_of_print, len(example_items))):
      if (0 < example_items[i].point):
         print("> " + example_items[i].description)

         termcolor.cprint(example_items[i].src_example, 'red')
      else:
         if (0==i):
            print("no results found")
         break

def print_stats():
   print("number of examples: " + str(len(example_items)))

def print_help():
   print("cmex switches:")
   print("--n: number of results to print")
   print("--stat")
   print("--help")
   print("--add-source-path: not supported yet")
   print("--remove-source-path: not supported yet")

def load_all_sources():
   for s in source_files:
      load_examples(s)

def process_arguments():
   global max_num_of_print
   global search_terms

   if 1 == len(sys.argv):
      print_help()
   elif "--stat" == sys.argv[1]:
     if (2 == len(sys.argv)):
        print_stats()
        return 2
     else:
        print("illegal numbert of arguments")
        return 1
   elif "--help" == sys.argv[1]:
     if (2 == len(sys.argv)):
        print_help()
        return 2
     else:
        print("illegal numbert of arguments")
        return 1
   else:
      i = 1
      while i < len(sys.argv):
         if "-n" == sys.argv[i]:
            i = i + 1
            if ((len(sys.argv) <= i) or not(sys.argv[i].isdigit())):
               print("-n needs to follow a number")
               return 1

            max_num_of_print = int(sys.argv[i])
         else:
            search_terms.append(sys.argv[i])

         i = i + 1
      return 0

if __name__ == '__main__':

   load_config(os.path.expanduser('~') + "/.config/cmex/config.txt")
   load_all_sources()
   error_code = process_arguments()

   if (0 == error_code):
      sort_examples()
      print_results()